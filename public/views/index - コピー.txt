<!DOCTYPE html>
<html lang="ja">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
      integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T"
      crossorigin="anonymous"
    />
    <link rel="stylesheet" href="../stylesheets/style.css" />

    <title>Todoアプリ</title>
  </head>
  <body>
    <div class="container">
      <!-- Content here -->
    </div>

    <header>
      TO DOアプリ
    </header>
    <div align="center">
<h3>
  タスク管理
</h3>
</div>
  
    

    <!--タスクの新規追加の操作-->

<div class="create-form"  align="center">
    <button type="button" class="btn btn-border" data-toggle="modal"data-target="#exampleModal" >
      +タスクを追加
    </button></div>
<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel"> タスクの新規登録</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      
      <form id="create-form">
        タスク
        <br><input type=text  name="task" id="task">
      <br>期限
        <br><input type=date id="deadline" name="deadline">
        <br>カテゴリ
        <br><select id="category" name="category" value="--">
          <option value="1">生活</option>
          <option value="2">勉強</option>
          <option value="3">仕事</option>
          <option value="4">趣味</option>
          </select>
       
      </form>


      
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">戻る</button>
        <button type="button" class="btn btn-primary" id="create-task">追加する</button>
        <!--fin-->

       
      </div>
    </div>
  </div>
</div>
<br><br>
<div align="center">
<h4>


  タスク
</h4>
</div>

<!--検索フォーム-->
<form action="#" id="form-search" >
  カテゴリで検索する
  <select name="search-category" value="--">
    <option value="1">生活</option>
    <option value="2">勉強</option>
    <option value="3">仕事</option>
    <option value="4">趣味</option>
    </select>
    <button  class="btn btn-border" id="category-search" >決定 </button>
    
   
  </form>


<!--タスク表示するメソッド-->
<!--<form name="task_table">
  <table>
    <tr><th>タスク名</th><th>期限</th><th>カテゴリ</th><th>　</th><th>　</th></tr>
    <tr><td>買い物に行く</td><td>2022/5/13</td><td>完了済み</td>
    <td>
      <button type="button" class="btn btn-border" data-toggle="modal"data-target="#exampleModal2" >更新</button>-->
    
      <!-- Modal 更新の編集画面 -->
    <!--<div class="modal fade" id="exampleModal2" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel2" aria-hidden="true">
       <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
      <h5 class="modal-updata" id="exampleModalLabel2"> タスクの編集</h5>
      <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
      </button>
    </div>
    <div class="modal-body">
      タスク
      <br><input type=text class="task_name">
    <br>期限
      <br><input type=date class="task_date" >
      <br>カテゴリ
      <br><select name="category"  value="">
        <option value="生活">生活</option>
        <option value="勉強">勉強</option>
        <option value="仕事">仕事</option>
        <option value="趣味">趣味</option>
        </select>
        <br>ステータス
      <br><select name="status" value="--">
        <option value="取り組み予定">取り組み予定</option>
        <option value="進行中">進行中</option>
        <option value="完了済み" >完了済み</option>
        
        </select>
        
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">戻る</button>
        <button type="button" class="btn btn-primary">保存する</button>
        <!--fin-->

    </td>
      
    <!--削除処理-->
    <!--<td><input type="submit" class="btn btn-border" value="削除" name="delete" onclick="clicked(this.form)"></td></tr>
    
  
  </table>
</form>-->

  <ul id="task-list"></ul>
  
  <!--更新処理-->
  <div class="update-form" id="update-form" style="display: none"> 
    <form>
      <input type="hidden" name="id" />
      <label for ="task">タスク名</label>
      <input type="text" id="task" name="task" />
      <label for ="deadline">期限</label>
      <input type="date" id="deadline"name="deadline" />
      <label for ="category">カテゴリ</label>
      <select id="category" name="category">
        <option value="1">生活</option>
        <option value="2">勉強</option>
        <option value="3">仕事</option>
        <option value="4">趣味</option>
        </select>
        <label for="status">ステータス</label>
        <select id="status" name="status">
          <option value="1">完了</option>
          <option value="2">作業中</option>
          <option value="3">未実施</option>
          </select>
          </form>

      <button class="display-none">キャンセル</button>
      <button class="display-none" id="update-task"> 保存</button>
      </div>




  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
      

        <script>
        //登録ボタン押下時
          $("#create-task").on("click",async function(){
            //リクエストデータをフォームから取得
            const requestData ={
              taskName:$("#create-form input[name=task]").val(),
              deadline:$("#create-form input[name=deadline]").val(),
              category:$("#create-form select[name=category]").val(),
            };

            //新規登録APIを実装
            const response = await httpPost(
              "//" + window.location.host + "/api/tasks",
              requestData
            );

            //画面をリロード
            window.location.reload();

          });

          //検索ボタンを押したとき
          $("#category-search").on("click", async function(){
            const number =  $("#form-search select[name=search-category]" ).val();
            console.log(number);
          });

          //削除ボタンのアラート
          function clicked(form){
          alert("本当に削除しますか？" );
          }

          //タスク一覧取得
          $(async function () {
            //一覧取得APIを実行
            const response = await httpGet(
              "//"+ window.location.host + "/api/tasks"
            );

            const list = response.map((item) => {
              const date = new Date(item.deadline);
             const year = date.getFullYear();
             const month = ("0" + (date.getMonth() + 1)).slice(-2);
             const day = ("0" + date.getDate()).slice(-2);
             const deadlineVal = `${year}年${month}月${day}日`;

             `<table><tr><th>タスク名</th><th>期限</th><th>カテゴリ</th><th>　</th><th>　</th>`
              //リストを表示
              return `</tr><tr><td>${item.task_name}</td><td>${deadlineVal}</td> <td>${item.category_name}</td><td><button id="update-button" data-id=${item.id} class="btn btn-border">更新</button></td><td><button id="delete-button" data-id=${item.id} data-delete=${item.task_name} class="btn btn-border">削除</button></td></tr> </table>`;

            });

            //ulタグにリストを追加
            $("ul#task-list").append(list);
          });

          //更新ボタン押下
          $(document).on("click","#update-button",async function(){
            $("#update-form").show();
            const id = $(this).data("id");
            const response = await httpGet(
              "//" + window.location.host + `/api/tasks/${id}`
            );
           
             //日付を ****-**-**に変換
             const date = new Date(response[0].deadline);
             const year = date.getFullYear();
             const month = ("0" + (date.getMonth() + 1)).slice(-2);
             const day = ("0" + date.getDate()).slice(-2);
             const deadlineVal = `${year}-${month}-${day}`;

             //初期値をリセット
             $("#update-form input[name=id]").val(response[0].id);
             $("#update-form input[name=task]").val(response[0].task_name);
             $("#update-form input[name=deadline]").val(deadlineVal);
             $("#update-form select[name=category]").val(response[0].category_id);
             $("#update-form select[name=status]").val(response[0].task_status);
          });

          //保存ボタン押下時
          $("#update-task").on("click",async function(){
            const id = $("#update-form input[name=id]").val();

            //リクエストデータをフォームから取得
            const requestData = {
              taskName: $("#update-form input[name=task]").val(),
              deadline: $("#update-form input[name=deadline]").val(),
              category: $("#update-form select[name=category").val(),
              status: $("#update-form select[name=status]").val(),
            };

            //新規登録APIを実装
            const response = await httpUpdate(
              "//" + window.location.host + `/api/tasks/${id}`,
              requestData
            );

            //画面をリロード
            window.location.reload();
          });

          //削除ボタン押下時
          $(document).on("click", "#delete-button", async function(){
            const taskName = $(this).data("delete");
            if (confirm(`下記の内容を削除します。\n ${taskName}`)){
              const id = $(this).data("id");

              //削除　APIを実行
              const response = await httpDelete(
                "//" + window.location.host + `/api/tasks/${id}`
              );

              //画面をリロード
              window.location.reload();
            }
          });

          </script>
          

            <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
          <script
          src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
          integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
          crossorigin="anonymous"
        ></script>
        <script src="../javascripts/index.js"></script>
    
        <script
          src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"
          integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"
          crossorigin="anonymous"
        ></script>
        <script
          src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"
          integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"
          crossorigin="anonymous"
        ></script>

          



</body>

</html>
